{
	"name": "DF_BWEL2250_2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSV_WEL_TEISU_M",
						"type": "DatasetReference"
					},
					"name": "csvdata"
				},
				{
					"linkedService": {
						"referenceName": "LNK_DB2",
						"type": "LinkedServiceReference"
					},
					"name": "dbTenpo"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LNK_DB2",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "csvdata2"
				},
				{
					"name": "chkTencd"
				},
				{
					"name": "chkItemcd"
				},
				{
					"name": "chkTeisu"
				},
				{
					"name": "chkExistsTencd"
				},
				{
					"name": "csvdata3"
				}
			],
			"script": "source(output(\n\t\tten_cd as string,\n\t\titem_cd as string,\n\t\ttei_su as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> csvdata\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'postgres',\n\tisolationLevel: 'READ_UNCOMMITTED') ~> dbTenpo\ncsvdata derive(create_user = upper('BWEL2250'),\n\t\tcreate_date = currentTimestamp()) ~> csvdata2\ncsvdata3 split(between(length(coalesce(ten_cd,'')),1,6),\n\tdisjoint: false) ~> chkTencd@(chkTencdOK, chkTencdNG)\nchkTencd@chkTencdOK split(between(length(coalesce(item_cd,'')),1,13),\n\tdisjoint: false) ~> chkItemcd@(chkItemcdOK, chkItemcdNG)\nchkItemcd@chkItemcdOK split(isDecimal(tei_su) && between(toDecimal(tei_su), -99, 99) && equals(ceil(toDecimal(tei_su) * 1), floor(toDecimal(tei_su) * 1)),\n\tdisjoint: false) ~> chkTeisu@(chkTeisuOK, chkTeisuNG)\nchkTeisu@chkTeisuOK, dbTenpo exists(chkTeisu@chkTeisuOK@ten_cd == dbTenpo@ten_cd,\n\tnegate:false,\n\tbroadcast: 'auto')~> chkExistsTencd\ncsvdata2 window(over(create_user),\n\tasc(ten_cd, true),\n\tasc(item_cd, true),\n\tline_no = rowNumber()) ~> csvdata3\nchkExistsTencd sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable: false,\n\tinsertable: true,\n\tupdateable: false,\n\tupsertable: false,\n\tstore: 'postgres',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}