{
	"name": "DF_BWEL2250",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSV_WEL_TEISU_M",
						"type": "DatasetReference"
					},
					"name": "csvdata"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "csvdata2"
				},
				{
					"name": "csvdata3"
				},
				{
					"name": "chkTencd"
				},
				{
					"name": "chkItemcd"
				},
				{
					"name": "chkTeisu"
				},
				{
					"name": "chkExistsTencd"
				}
			],
			"script": "source(output(\n\t\tten_cd as string,\n\t\titem_cd as string,\n\t\ttei_su as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> csvdata\ncsvdata derive(create_user = upper('BWEL2250'),\n\t\tcreate_date = currentTimestamp()) ~> csvdata2\ncsvdata2 window(over(line_no = rowNumber())) ~> csvdata3\ncsvdata3 split(between(length(coalesce(ten_cd,'')),1,6),\n\tdisjoint: false) ~> chkTencd@(chkTencdOK, chkTencdNG)\nchkTencd@chkTencdOK split(between(length(coalesce(item_cd,'')),1,13),\n\tdisjoint: false) ~> chkItemcd@(chkItemcdOK, chkItemcdNG)\nchkItemcd@chkItemcdOK split(isDecimal(tei_su),\n\tdisjoint: false) ~> chkTeisu@(chkTeisuOK, chkTeisuNG)\nchkTeisu@chkTeisuOK exists(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tnegate:false,\n\tbroadcast: 'auto')~> chkExistsTencd"
		}
	}
}